# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Step 1 - Checkout release branch from Github
      uses: actions/checkout@v3
      
    - name: Step 2 - Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Step 3 - Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Step 4 - List the current package
      run: ls -a
      
    - name: Step 5 - Run Tests
      run: mvn -B test --file pom.xml
      
    #- name: Step 6 - Run Super-Linter
    #  uses: super-linter/super-linter@v5.0.0
    #  env:
    #    DEFAULT_BRANCH: release
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Step 7 - Push SpotBugs report
      uses: jwgmeligmeyling/spotbugs-github-action@v1.2
      with: 
        path: '**/spotbugsXml.xml'
   
